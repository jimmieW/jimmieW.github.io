<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects on Jimmie West</title>
    <link>/project/</link>
    <description>Recent content in Projects on Jimmie West</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2021</copyright>
    <lastBuildDate>Tue, 06 Apr 2021 00:00:00 +0200</lastBuildDate>
    
	<atom:link href="/project/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Marbleous Blocks</title>
      <link>/project/marbleous-blocks/</link>
      <pubDate>Tue, 06 Apr 2021 00:00:00 +0200</pubDate>
      
      <guid>/project/marbleous-blocks/</guid>
      <description>Marbleous Blocks is a point &amp;amp; click, physics based, 3D-puzzle game with a retro vibe. The game was developed in order to drive the development of the Pixleon Engine and learn more about game development, including the release process.
   
Marbleous Blocks was released on Steam in January 2021. For more information please visit Steam</description>
    </item>
    
    <item>
      <title>Master thesis</title>
      <link>/project/master-thesis/</link>
      <pubDate>Wed, 18 Jul 2018 00:00:00 +0200</pubDate>
      
      <guid>/project/master-thesis/</guid>
      <description>I did my master thesis at a company called Donya Labs (aquired by Microsoft in 2017). The goal of the project was to look into how Simplygon could take advantage of the parallel processing power of GPUs in order to speed up normal/color map baking.
The result of the work can be found here: GPU-optimized generation of normal and color maps</description>
    </item>
    
    <item>
      <title>Pixleon Engine</title>
      <link>/project/pixleon-engine/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0200</pubDate>
      
      <guid>/project/pixleon-engine/</guid>
      <description>The Pixleon Engine is a game engine written in C++ with focus on 3D-games with physics.
The main motivation behind building it was to learn more about software development in general and game engine development in particular. For instance, I wanted to answer:
 How to decouple different parts of a game engine? How to organize code into proper folders to help maintain decoupling? How to produce an interface from dlls that can be re-used in different games or interactive experiences?</description>
    </item>
    
  </channel>
</rss>